name: Build and Deploy to GKE

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: ordinal-nectar-353205
  REGISTRY: gcr.io
  SERVICE_NAME: sign-encrypt
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: us-central1-c   # TODO: update to cluster zone
  #DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  #REPOSITORY: samples # TODO: update to Artifact Registry docker repository
  #IMAGE: static-site
  PORT: 9001
    
jobs:
  build:
    runs-on: local-ondc-crun
    outputs:
      o-imagename: ${{ steps.set-image-name.outputs.imagename }}
    steps:
    - uses: actions/checkout@v3

    - name: Set Image Name
      id: set-image-name
      run: |
          echo "IMAGE_NAME=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:$(git rev-parse --short HEAD)" >>${GITHUB_ENV}
          echo "::set-output name=imagename::${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:$(git rev-parse --short HEAD)"
    - name: Build with Maven
      run: |
          pwd && ls
          whoami
          #cd beckn-sign-encrypt
          #source /etc/profile.d/maven.sh
          #mvn clean install
          #mvn spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.IMAGE_NAME }} 
    
  artifact-upload:
    needs: 
      - build
    runs-on: local-ondc-crun  #vigyan-registry-vm
    steps:
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v1'
      with:
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'
        registry: '${{ env.REGISTRY }}' #-docker.pkg.dev'
        
    - name: Push Docker image
      run: |
          docker images
          #docker push ${{needs.build.outputs.o-imagename}}
          docker images       
          
  deploy-gke:
    needs: 
     - build
     - artifact-upload
    runs-on: local-ondc-crun
    environment: dev
    steps:
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'    

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
         cluster_name: ${{ env.GKE_CLUSTER }}
         location: ${{ env.GKE_ZONE }}
      
    - name: Set test
      run: |
         kubectl get services -A -o wide
  
    - name: upload deployed image name
      uses: actions/upload-artifact@v3
      with:
        name: image-name
        path: image-name.txt  
